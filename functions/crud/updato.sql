/* Cliente */
CREATE OR REPLACE FUNCTION UPDATO(
    ID_CLIENTE_ INT,
    NOVO_NOME VARCHAR(300),
    NOVO_ENDERECO TEXT,
    NOVA_DT_NASC DATA,
    NOVO_TELEFONE VARCHAR(11)
)
RETURNS VOID AS $$
BEGIN
    IF COALESCE(NOVO_NOME,NOVO_ENDERECO,NOVA_DT_NASC,NOVO_TELEFONE) IS NULL THEN 
        RAISE EXCEPTION 'Nenhum atributo novo foi passado para ser atualizado no Cliente!';
    END IF;
    UPDATE CLIENTE
    SET 
        NOME = COALESCE(NOVO_NOME, NOME),
        ENDERECO = COALESCE(NOVO_ENDERECO, ENDERECO),
        DT_NASC = COALESCE(NOVA_DT_NASC, DT_NASC),
        TELEFONE = COALESCE(NOVO_TELEFONE, TELEFONE)
    WHERE 
        ID_CLIENTE = ID_CLIENTE_;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Cliente com ID % não encontrado!', ID_CLIENTE;
    END IF;
END;
$$ LANGUAGE plpgsql;



/* Agência */
CREATE OR REPLACE FUNCTION UPDATO(
    ID_AGENCIA_ INT,
    NOVO_ENDERECO TEXT,
    NOVO_TELEFONE VARCHAR(11)
)
RETURNS VOID AS $$
BEGIN
    IF COALESCE(NOVO_NOME,NOVO_TELEFONE) IS NULL THEN 
        RAISE EXCEPTION 'Nenhum atributo novo foi passado para ser atualizado na agência!';
    END IF;
    UPDATE AGENCIA
    SET 
        ENDERECO = COALESCE(NOVO_ENDERECO, ENDERECO),
        TELEFONE = COALESCE(NOVO_TELEFONE, TELEFONE)
    WHERE 
        NUM_AGENCIA = ID_AGENCIA_;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Agência com ID % não encontrada!', ID_CLIENTE;
    END IF;
END;
$$ LANGUAGE plpgsql;


/* Banco */
CREATE OR REPLACE FUNCTION UPDATO(
    ID_BANCO_ INT,
    NOVO_NOME TEXT
)
RETURNS VOID AS $$
BEGIN
    UPDATE BANCO
    SET 
        NOME = NOVO_NOME
    WHERE 
        ID_BANCO = ID_BANCO_;

    IF NOT FOUND THEN
        RAISE EXCEPTION 'Banco com ID % não encontrado!', ID_BANCO_;
    END IF;
END;
$$ LANGUAGE plpgsql;