CREATE OR REPLACE FUNCTION VERIFICAR_LIMITE() RETURNS TRIGGER AS 
$$ 
DECLARE 
	LIMITE_ INT;
BEGIN 
	SELECT LIMITE INTO LIMITE_ FROM CARTAO NATURAL JOIN CONTA WHERE NUM_CARTAO = NEW.NUM_CARTAO;
	
	IF LIMITE_ - NEW.VALOR_TOTAL < 0 THEN
		RAISE EXCEPTION 'LIMITE INSUFICIENTE PARA COMPRA!';
	END IF;
	
	RETURN NEW;
END; 
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER VERICAR_LIMITE_TR BEFORE INSERT ON 
COMPRACREDITO FOR EACH ROW EXECUTE PROCEDURE VERIFICAR_LIMITE();

/* ------------------------------------------------------------------------------------------------------------------------------------------------------------------------ */

CREATE OR REPLACE FUNCTION CRIAR_FATURAS_E_PARCELAS() RETURNS TRIGGER AS 
$$ --ATUALIZAR O LIMITE!!!
DECLARE 
	DIA_FECHAMENTO_ INT;
	FATURA_JA_FECHOU_ BOOLEAN;
	EXISTE_FATURA_DESSE_MES_ BOOLEAN;
	EXISTE_FATURA_PROX_MES_ BOOLEAN;
	ID_FATURA_ INT;
    DT_FECHAMENTO_ DATE;
BEGIN 

	SELECT DIA_FECHAMENTO INTO DIA_FECHAMENTO_ FROM CARTAO NATURAL JOIN CONTA WHERE NUM_CARTAO = NEW.NUM_CARTAO;
	SELECT EXISTS (SELECT 1 FROM FATURA WHERE DATE_TRUNC('month',DT_FECHAMENTO) = DATE_TRUNC('month',CURRENT_DATE) ) INTO EXISTE_FATURA_DESSE_MES_;
	SELECT EXISTS(SELECT 1 FROM FATURA WHERE DATE_TRUNC('month',DT_FECHAMENTO) = DATE_TRUNC('month',CURRENT_DATE+INTERVAL '1 month') ) INTO EXISTE_FATURA_PROX_MES_;
	SELECT (DIA_FECHAMENTO_ <= EXTRACT(DAY FROM CURRENT_DATE)) INTO FATURA_JA_FECHOU_;


    IF (FATURA_JA_FECHOU_) THEN
        DT_FECHAMENTO_ := DATE_TRUNC('month',CURRENT_DATE+INTERVAL '1 month') + make_interval(days := (DIA_FECHAMENTO_-1));
    ELSE 
        DT_FECHAMENTO_ := DATE_TRUNC('month',CURRENT_DATE) + make_interval(days := (DIA_FECHAMENTO_-1));
    END IF;

    FOR i IN 1..NEW.QTD_PARCELAS LOOP 
        IF(NOT EXISTS (SELECT 1 FROM FATURA WHERE DT_FECHAMENTO = DT_FECHAMENTO_)) THEN
            INSERT INTO FATURA( ID_FATURA, NUM_CARTAO, DT_FECHAMENTO) VALUES (
						DEFAULT,
						NEW.NUM_CARTAO,
						DT_FECHAMENTO_);
        END IF;

		SELECT ID_FATURA INTO ID_FATURA_ FROM FATURA WHERE DT_FECHAMENTO = DT_FECHAMENTO_;
        
        INSERT INTO COMPRAFATURA( ID_FATURA, ID_COMPRA, NUM_PARCELA, VALOR) VALUES
        (ID_FATURA_, NEW.ID_COMPRA, i, NEW.VALOR_TOTAL/NEW.QTD_PARCELAS);


        DT_FECHAMENTO_ := DATE_TRUNC('month',DT_FECHAMENTO_) + make_interval(days := (DIA_FECHAMENTO_-1), months :=1);
    END LOOP;
	
	RETURN NEW;
END; 
$$ LANGUAGE PLPGSQL;

CREATE OR REPLACE TRIGGER VERICAR_LIMITE_TR AFTER INSERT ON 
COMPRACREDITO FOR EACH ROW EXECUTE PROCEDURE CRIAR_FATURAS_E_PARCELAS_TR();